name: Collect Info

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 360

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          check-latest: true

      - name: Install CUTEst via custom script
        shell: bash
        run: |
          set -euo pipefail
          chmod +x ./install_cutest_mac.sh
          ./install_cutest_mac.sh

      - name: Install PyCUTEst
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          python -m pip install pycutest

      - name: Checkout OptiProfiler
        uses: actions/checkout@v4
        with:
          repository: optiprofiler/optiprofiler
          path: optiprofiler
          submodules: recursive
          ref: python

      - name: Install Python dependencies
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Python script
        shell: bash
        run: |
          set -euo pipefail

          # Source CUTEst-related bashrc files
          for f in mastsif sifdecode cutest; do
            rc="$(brew --prefix "$f")/$f.bashrc"
            if [ -f "$rc" ]; then
              # shellcheck disable=SC1090
              source "$rc"
            fi
          done

          # Set MYARCH if not set
          if [ -z "${MYARCH:-}" ] && [ -n "${CUTEST:-}" ] && [ -d "$CUTEST/lib" ]; then
            first_arch="$(find "$CUTEST/lib" -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | head -n1 || true)"
            if [ -n "$first_arch" ]; then
              export MYARCH="$first_arch"
            fi
          fi

          echo "Using CUTEST=${CUTEST:-}"
          echo "Using SIFDECODE=${SIFDECODE:-}"
          echo "Using MASTSIF=${MASTSIF:-}"
          echo "Using MYARCH=${MYARCH:-}"

          python -m p_getInfo

      - name: Upload Python artifacts
        uses: actions/upload-artifact@v4
        with:
          name: probinfo-files-pycutest
          path: |
            probinfo_pycutest.csv
            feasibility_pycutest.txt
            timeout_problems_pycutest.txt
            log_pycutest.txt