name: Collect Info

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 360

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          check-latest: true

      - name: Install CUTEst via custom script
        shell: bash
        run: |
          set -euo pipefail
          chmod +x ./install_cutest_mac.sh
          ./install_cutest_mac.sh

      - name: Install PyCUTEst
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          python -m pip install pycutest

      - name: Checkout OptiProfiler
        uses: actions/checkout@v4
        with:
          repository: optiprofiler/optiprofiler
          path: optiprofiler
          submodules: recursive
          ref: python

      - name: Install Python dependencies
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare CUTEst env for subsequent steps (persist to GITHUB_ENV)
        shell: bash
        run: |
          set -euo pipefail
          for f in archdefs mastsif sifdecode cutest; do
            rc="$(brew --prefix "$f")/$f.bashrc"
            if [ -f "$rc" ]; then
              # shellcheck disable=SC1090
              source "$rc"
            fi
          done
          CUTEST_PREFIX="$(brew --prefix cutest)"
          first_arch="$(find "$CUTEST_PREFIX/lib" -mindepth 1 -maxdepth 1 -type d -print -quit || true)"
          if [ -z "$first_arch" ]; then
            echo "Cannot detect MYARCH from $CUTEST_PREFIX/lib"
            exit 1
          fi
          MYARCH_DETECTED="$(basename "$first_arch")"

          echo "CUTEST=$CUTEST"       >> "$GITHUB_ENV"
          echo "SIFDECODE=$SIFDECODE" >> "$GITHUB_ENV"
          echo "MASTSIF=$MASTSIF"     >> "$GITHUB_ENV"
          echo "MYARCH=$MYARCH_DETECTED" >> "$GITHUB_ENV"

          echo "Detected CUTEST env:"
          echo "  CUTEST=$CUTEST"
          echo "  SIFDECODE=$SIFDECODE"
          echo "  MASTSIF=$MASTSIF"
          echo "  MYARCH=$MYARCH_DETECTED"

      - name: Run Python script
        shell: bash
        run: |
          set -euo pipefail
          for f in archdefs mastsif sifdecode cutest; do
            rc="$(brew --prefix "$f")/$f.bashrc"
            if [ -f "$rc" ]; then
              # shellcheck disable=SC1090
              source "$rc"
            fi
          done

          if [ -z "${MYARCH:-}" ]; then
            CUTEST_PREFIX="$(brew --prefix cutest)"
            first_arch="$(find "$CUTEST_PREFIX/lib" -mindepth 1 -maxdepth 1 -type d -print -quit || true)"
            if [ -n "$first_arch" ]; then
              export MYARCH="$(basename "$first_arch")"
            else
              echo "Failed to auto-detect MYARCH under $CUTEST_PREFIX/lib"
              exit 1
            fi
          fi

          echo "Using CUTEST=$CUTEST"
          echo "Using SIFDECODE=$SIFDECODE"
          echo "Using MASTSIF=$MASTSIF"
          echo "Using MYARCH=$MYARCH"

          python -m p_getInfo

      - name: Upload Python artifacts
        uses: actions/upload-artifact@v4
        with:
          name: probinfo-files-pycutest
          path: |
            probinfo_pycutest.csv
            feasibility_pycutest.txt
            timeout_problems_pycutest.txt
            log_pycutest.txt